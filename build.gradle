buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "2.5.0"
group = "com.filostorm.ulvcovers" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ULVCovers-1.12.2"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = property("forge_ver")
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { // CraftTweaker
        url = uri("https://maven.blamejared.com/")
    }
    maven { // GTCE
        url = uri("https://minecraft.curseforge.com/api/maven")
    }
    maven { // CCL
        url = uri("http://chickenbones.net/maven/")
    }
    maven { // JEI
        url = uri("https://dvs1.progwml6.com/files/maven/")
    }
    maven { // JEI fallback
        url = uri("https://modmaven.k-4u.nl")
    }
    maven { // CTM
        url = uri("http://maven.tterrag.com/")
    }
    maven {
        url = uri("https://cursemaven.com")
    }
}


dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    
    deobfCompile("CraftTweaker2:CraftTweaker2-MC1120-Main:${property("ct_ver")}")

    deobfProvided("mezz.jei:jei_1.12.2:${property("jei_ver")}:api")
    runtime("mezz.jei:jei_1.12.2:${property("jei_ver")}")


    deobfCompile("curse.maven:gregtech-ce-unofficial-557242:4904269")

    deobfCompile("codechicken:ChickenASM:1.12-1.0.2.9")
    deobfCompile("codechicken-lib-1-8:CodeChickenLib-1.12.2:3.2.3.358:universal")
    deobfCompile("team.chisel.ctm:CTM:MC1.12.2-1.0.2.31")
    deobfCompile("curse.maven:the-one-probe-245211:2667280")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

}
